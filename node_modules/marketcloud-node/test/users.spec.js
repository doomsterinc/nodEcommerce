var marketcloud = require('../index.js'),
	mocha = require('mocha'),
	chai = require('chai');


var expect = chai.expect;

var client = null;
var user_id = null;
var uuid = require('node-uuid');
var random_string = uuid.v4();
var testUser = {
	name: "My Test User",
	email: random_string + "alfred@gotham.com", //UUID is used to avoid unique clashes
	password: "3cec8b8b-36af-4d7c-bd3e-0f57c6a0cf46"
}
describe('Users', function() {

	before(function() {

		client = new marketcloud.Client({
			public_key: process.env.MARKETCLOUD_PUBLIC_KEY,
			secret_key: process.env.MARKETCLOUD_SECRET_KEY
		});

		return client.authenticate();
	})


	it('Should retrieve a list of users', function() {
		return client.users.list({})
			.then(function(response) {

				expect(response.length).to.not.equal(0);
				expect(response.length).to.be.at.most(20);
				user_id = response[0].id;

			})
	});


	it('Should retrieve a specific user', function() {
		return client.users.getById(user_id)
			.then(function(response) {

				expect(response.id).to.equal(user_id);

			})

	})

	it('Should create a user', function() {
		return client.users.create(testUser)
			.then(function(response) {
				console.log("Ho creato ",testUser)
				testUser['id'] = response.id

			})
	})

	it('Should update a user', function() {
		var update = {
			name: 'Geronimo Stilton'
		}
		return client.users.update(testUser.id, update)
			.then(function(response) {
				console.log("Dopo l update ecco user ",response)
			})
	})


	it('Should authenticate a user', function() {
		return client.users.authenticate(testUser.email, testUser.password)
			.then(function(response) {
			})
	})


	it('Should delete a user', function() {
		return client.users.delete(testUser.id)
			.then(function(response) {
				console.log("Ho deletato")
			})
	})


})